/**
 * This file is generated by 'file2variable-cli'
 * It is not mean to be edited by hand
 */
// tslint:disable
import { App } from "./index";

// @ts-ignore
export function appTemplateHtml(this: App) {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h4',[_vm._v("Log Tool")]),_c('tab-container',{attrs:{"data":_vm.data},on:{"switching":function($event){_vm.switching($event)}}})],1)}
// @ts-ignore
export var appTemplateHtmlStatic = [  ]
export const protocolProto = {
    "nested": {
        "RequestProtocol": {
            "fields": {
                "requestId": {
                    "type": "uint32",
                    "id": 1
                },
                "kind": {
                    "type": "string",
                    "id": 2
                },
                "searchLogs": {
                    "type": "SearchLogs",
                    "id": 3
                },
                "searchSamples": {
                    "type": "SearchSamples",
                    "id": 4
                }
            }
        },
        "SearchLogs": {
            "fields": {
                "content": {
                    "type": "string",
                    "id": 1
                },
                "time": {
                    "type": "string",
                    "id": 2
                },
                "hostname": {
                    "type": "string",
                    "id": 3
                },
                "from": {
                    "type": "uint32",
                    "id": 4
                },
                "size": {
                    "type": "uint32",
                    "id": 5
                }
            }
        },
        "SearchSamples": {
            "fields": {
                "from": {
                    "type": "string",
                    "id": 1
                },
                "to": {
                    "type": "string",
                    "id": 2
                }
            }
        },
        "ResponseProtocol": {
            "fields": {
                "kind": {
                    "type": "string",
                    "id": 1
                },
                "flows": {
                    "type": "Flows",
                    "id": 2
                },
                "historySamples": {
                    "rule": "repeated",
                    "type": "SampleFrame",
                    "id": 3
                },
                "searchLogsResult": {
                    "type": "SearchLogsResult",
                    "id": 4
                },
                "searchSamplesResult": {
                    "type": "SearchSamplesResult",
                    "id": 5
                },
                "resaveFailedLogsResult": {
                    "type": "ResaveFailedLogsResult",
                    "id": 6
                }
            }
        },
        "Flows": {
            "fields": {
                "serverTime": {
                    "type": "string",
                    "id": 1
                },
                "flows": {
                    "rule": "repeated",
                    "type": "Flow",
                    "id": 2
                }
            }
        },
        "SearchLogsResult": {
            "fields": {
                "requestId": {
                    "type": "uint32",
                    "id": 1
                },
                "kind": {
                    "type": "string",
                    "id": 2
                },
                "total": {
                    "type": "uint32",
                    "id": 3
                },
                "logs": {
                    "rule": "repeated",
                    "type": "Log",
                    "id": 4
                },
                "error": {
                    "type": "string",
                    "id": 5
                }
            }
        },
        "SearchSamplesResult": {
            "fields": {
                "requestId": {
                    "type": "uint32",
                    "id": 1
                },
                "kind": {
                    "type": "string",
                    "id": 2
                },
                "searchSampleResult": {
                    "rule": "repeated",
                    "type": "SampleFrame",
                    "id": 3
                },
                "error": {
                    "type": "string",
                    "id": 4
                }
            }
        },
        "ResaveFailedLogsResult": {
            "fields": {
                "requestId": {
                    "type": "uint32",
                    "id": 1
                },
                "kind": {
                    "type": "string",
                    "id": 2
                },
                "savedCount": {
                    "type": "uint32",
                    "id": 3
                },
                "totalCount": {
                    "type": "uint32",
                    "id": 4
                },
                "error": {
                    "type": "string",
                    "id": 5
                }
            }
        },
        "SampleFrame": {
            "fields": {
                "time": {
                    "type": "string",
                    "id": 1
                },
                "samples": {
                    "rule": "repeated",
                    "type": "Sample",
                    "id": 2
                }
            }
        },
        "FlowProtocol": {
            "fields": {
                "flows": {
                    "rule": "repeated",
                    "type": "Flow",
                    "id": 1
                }
            }
        },
        "Flow": {
            "fields": {
                "kind": {
                    "type": "string",
                    "id": 1
                },
                "log": {
                    "type": "Log",
                    "id": 2
                },
                "sample": {
                    "type": "Sample",
                    "id": 3
                }
            }
        },
        "Log": {
            "fields": {
                "time": {
                    "type": "string",
                    "id": 1
                },
                "content": {
                    "type": "string",
                    "id": 2
                },
                "filepath": {
                    "type": "string",
                    "id": 3
                },
                "hostname": {
                    "type": "string",
                    "id": 4
                }
            }
        },
        "Sample": {
            "fields": {
                "hostname": {
                    "type": "string",
                    "id": 1
                },
                "port": {
                    "type": "uint32",
                    "id": 2
                },
                "values": {
                    "keyType": "string",
                    "type": "uint32",
                    "id": 3
                }
            }
        }
    }
};
export const requestProtocolJson = {
    "$ref": "#/definitions/RequestProtocol",
    "definitions": {
        "RequestProtocol": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "search logs",
                        "search samples",
                        "resave failed logs"
                    ]
                },
                "searchLogs": {
                    "$ref": "#/definitions/SearchLogs"
                },
                "searchSamples": {
                    "$ref": "#/definitions/SearchSamples"
                }
            },
            "required": [
                "requestId",
                "kind"
            ],
            "additionalProperties": false,
            "maxProperties": 3
        },
        "SearchLogs": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "from": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "size": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                }
            },
            "required": [
                "content",
                "time",
                "hostname",
                "from",
                "size"
            ],
            "additionalProperties": false
        },
        "SearchSamples": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            },
            "required": [
                "from",
                "to"
            ],
            "additionalProperties": false
        }
    }
};
export const responseProtocolJson = {
    "$ref": "#/definitions/ResponseProtocol",
    "definitions": {
        "ResponseProtocol": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string",
                    "enum": [
                        "flows",
                        "history samples",
                        "search logs result",
                        "search samples result",
                        "resave failed logs result"
                    ]
                },
                "flows": {
                    "$ref": "#/definitions/Flows"
                },
                "historySamples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SampleFrame"
                    }
                },
                "searchLogsResult": {
                    "$ref": "#/definitions/SearchLogsResult"
                },
                "searchSamplesResult": {
                    "$ref": "#/definitions/SearchSamplesResult"
                },
                "resaveFailedLogsResult": {
                    "$ref": "#/definitions/ResaveFailedLogsResult"
                }
            },
            "required": [
                "kind"
            ],
            "additionalProperties": false,
            "maxProperties": 2
        },
        "Flows": {
            "type": "object",
            "properties": {
                "serverTime": {
                    "type": "string"
                },
                "flows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Flow"
                    }
                }
            },
            "required": [
                "serverTime",
                "flows"
            ],
            "additionalProperties": false
        },
        "Flow": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string",
                    "enum": [
                        "log",
                        "sample"
                    ]
                },
                "log": {
                    "$ref": "#/definitions/Log"
                },
                "sample": {
                    "$ref": "#/definitions/Sample"
                }
            },
            "required": [
                "kind"
            ],
            "additionalProperties": false,
            "minProperties": 2,
            "maxProperties": 2
        },
        "Log": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "filepath": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                }
            },
            "required": [
                "time",
                "content",
                "filepath",
                "hostname"
            ],
            "additionalProperties": false
        },
        "Sample": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "required": [
                "hostname",
                "values"
            ],
            "additionalProperties": false
        },
        "SampleFrame": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Sample"
                    }
                }
            },
            "required": [
                "time"
            ],
            "additionalProperties": false
        },
        "SearchLogsResult": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "success",
                        "fail"
                    ]
                },
                "total": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Log"
                    }
                },
                "error": {
                    "type": "string"
                }
            },
            "required": [
                "requestId",
                "kind"
            ],
            "additionalProperties": false,
            "minProperties": 3,
            "maxProperties": 4
        },
        "SearchSamplesResult": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "success",
                        "fail"
                    ]
                },
                "searchSampleResult": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SampleFrame"
                    }
                },
                "error": {
                    "type": "string"
                }
            },
            "required": [
                "requestId",
                "kind"
            ],
            "additionalProperties": false,
            "maxProperties": 3
        },
        "ResaveFailedLogsResult": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "success",
                        "fail"
                    ]
                },
                "savedCount": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "totalCount": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "error": {
                    "type": "string"
                }
            },
            "required": [
                "requestId",
                "kind"
            ],
            "additionalProperties": false,
            "minProperties": 3,
            "maxProperties": 4
        }
    }
};
// tslint:enable
