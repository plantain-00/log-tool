/**
 * This file is generated by 'file2variable-cli'
 * It is not mean to be edited by hand
 */
// tslint:disable
import { App } from "./index";
import { Others } from "./index";
import { RealtimeLogs } from "./index";
import { RealtimeSamples } from "./index";
import { SearchLogs } from "./index";
import { SearchSamples } from "./index";

// @ts-ignore
export function appTemplateHtml(this: App) {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h4',[_vm._v("Log Tool")]),_vm._v(" "),_c('tab-container',{attrs:{"data":_vm.data},on:{"switching":function($event){_vm.switching($event)}}})],1)}
// @ts-ignore
export var appTemplateHtmlStatic = [  ]
// @ts-ignore
export function othersTemplateHtml(this: Others) {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel"},[_c('button',{staticClass:"btn btn-primary",on:{"click":function($event){_vm.resaveFailedLogs()}}},[_vm._v("resave failed logs")])])}
// @ts-ignore
export var othersTemplateHtmlStatic = [  ]
export const protocolProto = {
    "nested": {
        "RequestProtocol": {
            "fields": {
                "requestId": {
                    "type": "uint32",
                    "id": 1
                },
                "kind": {
                    "type": "string",
                    "id": 2
                },
                "searchLogs": {
                    "type": "SearchLogs",
                    "id": 3
                },
                "searchSamples": {
                    "type": "SearchSamples",
                    "id": 4
                }
            }
        },
        "SearchLogs": {
            "fields": {
                "content": {
                    "type": "string",
                    "id": 1
                },
                "time": {
                    "type": "string",
                    "id": 2
                },
                "hostname": {
                    "type": "string",
                    "id": 3
                },
                "from": {
                    "type": "uint32",
                    "id": 4
                },
                "size": {
                    "type": "uint32",
                    "id": 5
                }
            }
        },
        "SearchSamples": {
            "fields": {
                "from": {
                    "type": "string",
                    "id": 1
                },
                "to": {
                    "type": "string",
                    "id": 2
                }
            }
        },
        "ResponseProtocol": {
            "fields": {
                "kind": {
                    "type": "string",
                    "id": 1
                },
                "flows": {
                    "type": "Flows",
                    "id": 2
                },
                "historySamples": {
                    "rule": "repeated",
                    "type": "SampleFrame",
                    "id": 3
                },
                "searchLogsResult": {
                    "type": "SearchLogsResult",
                    "id": 4
                },
                "searchSamplesResult": {
                    "type": "SearchSamplesResult",
                    "id": 5
                },
                "resaveFailedLogsResult": {
                    "type": "ResaveFailedLogsResult",
                    "id": 6
                }
            }
        },
        "Flows": {
            "fields": {
                "serverTime": {
                    "type": "string",
                    "id": 1
                },
                "flows": {
                    "rule": "repeated",
                    "type": "Flow",
                    "id": 2
                }
            }
        },
        "SearchLogsResult": {
            "fields": {
                "requestId": {
                    "type": "uint32",
                    "id": 1
                },
                "kind": {
                    "type": "string",
                    "id": 2
                },
                "total": {
                    "type": "uint32",
                    "id": 3
                },
                "logs": {
                    "rule": "repeated",
                    "type": "Log",
                    "id": 4
                },
                "error": {
                    "type": "string",
                    "id": 5
                }
            }
        },
        "SearchSamplesResult": {
            "fields": {
                "requestId": {
                    "type": "uint32",
                    "id": 1
                },
                "kind": {
                    "type": "string",
                    "id": 2
                },
                "searchSampleResult": {
                    "rule": "repeated",
                    "type": "SampleFrame",
                    "id": 3
                },
                "error": {
                    "type": "string",
                    "id": 4
                }
            }
        },
        "ResaveFailedLogsResult": {
            "fields": {
                "requestId": {
                    "type": "uint32",
                    "id": 1
                },
                "kind": {
                    "type": "string",
                    "id": 2
                },
                "savedCount": {
                    "type": "uint32",
                    "id": 3
                },
                "totalCount": {
                    "type": "uint32",
                    "id": 4
                },
                "error": {
                    "type": "string",
                    "id": 5
                }
            }
        },
        "SampleFrame": {
            "fields": {
                "time": {
                    "type": "string",
                    "id": 1
                },
                "samples": {
                    "rule": "repeated",
                    "type": "Sample",
                    "id": 2
                }
            }
        },
        "FlowProtocol": {
            "fields": {
                "flows": {
                    "rule": "repeated",
                    "type": "Flow",
                    "id": 1
                }
            }
        },
        "Flow": {
            "fields": {
                "kind": {
                    "type": "string",
                    "id": 1
                },
                "log": {
                    "type": "Log",
                    "id": 2
                },
                "sample": {
                    "type": "Sample",
                    "id": 3
                }
            }
        },
        "Log": {
            "fields": {
                "time": {
                    "type": "string",
                    "id": 1
                },
                "content": {
                    "type": "string",
                    "id": 2
                },
                "filepath": {
                    "type": "string",
                    "id": 3
                },
                "hostname": {
                    "type": "string",
                    "id": 4
                }
            }
        },
        "Sample": {
            "fields": {
                "hostname": {
                    "type": "string",
                    "id": 1
                },
                "port": {
                    "type": "uint32",
                    "id": 2
                },
                "values": {
                    "keyType": "string",
                    "type": "uint32",
                    "id": 3
                }
            }
        }
    }
};
// @ts-ignore
export function realtimeLogsTemplateHtml(this: RealtimeLogs) {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel"},[_c('div',[_c('button',{staticClass:"btn btn-default btn-sm",attrs:{"disabled":_vm.logsPush.length === 0},on:{"click":function($event){_vm.clearLogsPush()}}},[_vm._v("clear")]),_vm._v(" "),_c('label',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.showRawLogPush),expression:"showRawLogPush"}],attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.showRawLogPush)?_vm._i(_vm.showRawLogPush,null)>-1:(_vm.showRawLogPush)},on:{"change":function($event){var $$a=_vm.showRawLogPush,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.showRawLogPush=$$a.concat([$$v]))}else{$$i>-1&&(_vm.showRawLogPush=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.showRawLogPush=$$c}}}}),_vm._v(" show raw data\n        ")]),_vm._v(" "),_c('label',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.showFormattedLogPush),expression:"showFormattedLogPush"}],attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.showFormattedLogPush)?_vm._i(_vm.showFormattedLogPush,null)>-1:(_vm.showFormattedLogPush)},on:{"change":function($event){var $$a=_vm.showFormattedLogPush,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.showFormattedLogPush=$$a.concat([$$v]))}else{$$i>-1&&(_vm.showFormattedLogPush=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.showFormattedLogPush=$$c}}}}),_vm._v(" show formatted data\n        ")])]),_vm._v(" "),_c('ul',_vm._l((_vm.logsPush),function(log,index){return _c('li',{key:index,staticClass:"hide-button-container li-result-item"},[_c('span',{staticClass:"label label-primary"},[_c('relative-time',{attrs:{"time":log.timeValue,"locale":_vm.locale}})],1),_vm._v(" "),_c('span',{staticClass:"label label-default"},[_vm._v(_vm._s(log.hostname))]),_vm._v(" "),_c('span',{staticClass:"label label-default"},[_vm._v(_vm._s(log.filepath))]),_vm._v(" "),(log.content && _vm.showRawLogPush)?_c('pre',[_vm._v(_vm._s(log.content))]):_vm._e(),_vm._v(" "),(log.formattedContent && _vm.showFormattedLogPush && log.visible)?_c('pre',{attrs:{"id":_vm.logPushId(index)}},[_vm._v(_vm._s(log.formattedContent))]):_vm._e(),_vm._v(" "),(log.formattedContent && _vm.showFormattedLogPush)?_c('button',{staticClass:"btn btn-default btn-sm",style:(_vm.visibilityButtonStyle(log)),on:{"click":function($event){_vm.toggleVisibility(log)}}},[_vm._v(_vm._s(log.visible ? "hide formatted" : "show formatted"))]):_vm._e()])}))])}
// @ts-ignore
export var realtimeLogsTemplateHtmlStatic = [  ]
// @ts-ignore
export function realtimeSamplesTemplateHtml(this: RealtimeSamples) {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel"},[_c('ul',{staticClass:"menu"},_vm._l((_vm.chartConfigs),function(config,index){return _c('li',{key:config.name},[_c('a',{attrs:{"href":"javascript:void(0)"},on:{"click":function($event){_vm.scrollBy(config.name)}}},[_vm._v(_vm._s(config.description))])])})),_vm._v(" "),_vm._l((_vm.chartConfigs),function(config,index){return _c('div',{key:config.name},[_c('h4',{staticStyle:{"padding-top":"10px"}},[_vm._v("\n            "+_vm._s(config.description)+"\n            "+_vm._s(config.unit !== undefined ? ("(" + config.unit + ")") : "")+"\n            "+_vm._s(config.sum !== undefined ? (" " + config.sum) : "")+"\n        ")]),_vm._v(" "),_c('canvas',{staticClass:"graph",attrs:{"id":'current-' + config.name,"width":_vm.chartWidth,"height":"300"}})])})],2)}
// @ts-ignore
export var realtimeSamplesTemplateHtmlStatic = [  ]
export const requestProtocolJson = {
    "$ref": "#/definitions/RequestProtocol",
    "definitions": {
        "RequestProtocol": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "search logs",
                        "search samples",
                        "resave failed logs"
                    ]
                },
                "searchLogs": {
                    "$ref": "#/definitions/SearchLogs"
                },
                "searchSamples": {
                    "$ref": "#/definitions/SearchSamples"
                }
            },
            "required": [
                "requestId",
                "kind"
            ],
            "additionalProperties": false,
            "maxProperties": 3
        },
        "SearchLogs": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "from": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "size": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                }
            },
            "required": [
                "content",
                "time",
                "hostname",
                "from",
                "size"
            ],
            "additionalProperties": false
        },
        "SearchSamples": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            },
            "required": [
                "from",
                "to"
            ],
            "additionalProperties": false
        }
    }
};
export const responseProtocolJson = {
    "$ref": "#/definitions/ResponseProtocol",
    "definitions": {
        "ResponseProtocol": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string",
                    "enum": [
                        "flows",
                        "history samples",
                        "search logs result",
                        "search samples result",
                        "resave failed logs result"
                    ]
                },
                "flows": {
                    "$ref": "#/definitions/Flows"
                },
                "historySamples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SampleFrame"
                    }
                },
                "searchLogsResult": {
                    "$ref": "#/definitions/SearchLogsResult"
                },
                "searchSamplesResult": {
                    "$ref": "#/definitions/SearchSamplesResult"
                },
                "resaveFailedLogsResult": {
                    "$ref": "#/definitions/ResaveFailedLogsResult"
                }
            },
            "required": [
                "kind"
            ],
            "additionalProperties": false,
            "maxProperties": 2
        },
        "Flows": {
            "type": "object",
            "properties": {
                "serverTime": {
                    "type": "string"
                },
                "flows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Flow"
                    }
                }
            },
            "required": [
                "serverTime",
                "flows"
            ],
            "additionalProperties": false
        },
        "Flow": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string",
                    "enum": [
                        "log",
                        "sample"
                    ]
                },
                "log": {
                    "$ref": "#/definitions/Log"
                },
                "sample": {
                    "$ref": "#/definitions/Sample"
                }
            },
            "required": [
                "kind"
            ],
            "additionalProperties": false,
            "minProperties": 2,
            "maxProperties": 2
        },
        "Log": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "filepath": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                }
            },
            "required": [
                "time",
                "content",
                "filepath",
                "hostname"
            ],
            "additionalProperties": false
        },
        "Sample": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                }
            },
            "required": [
                "hostname",
                "values"
            ],
            "additionalProperties": false
        },
        "SampleFrame": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Sample"
                    }
                }
            },
            "required": [
                "time"
            ],
            "additionalProperties": false
        },
        "SearchLogsResult": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "success",
                        "fail"
                    ]
                },
                "total": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Log"
                    }
                },
                "error": {
                    "type": "string"
                }
            },
            "required": [
                "requestId",
                "kind"
            ],
            "additionalProperties": false,
            "minProperties": 3,
            "maxProperties": 4
        },
        "SearchSamplesResult": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "success",
                        "fail"
                    ]
                },
                "searchSampleResult": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SampleFrame"
                    }
                },
                "error": {
                    "type": "string"
                }
            },
            "required": [
                "requestId",
                "kind"
            ],
            "additionalProperties": false,
            "maxProperties": 3
        },
        "ResaveFailedLogsResult": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "success",
                        "fail"
                    ]
                },
                "savedCount": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "totalCount": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "error": {
                    "type": "string"
                }
            },
            "required": [
                "requestId",
                "kind"
            ],
            "additionalProperties": false,
            "minProperties": 3,
            "maxProperties": 4
        }
    }
};
// @ts-ignore
export function searchLogsTemplateHtml(this: SearchLogs) {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel"},[_c('div',{staticClass:"flex-center"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.content),expression:"content"}],staticClass:"form-control",attrs:{"title":"content"},domProps:{"value":(_vm.content)},on:{"keyup":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,"enter",13,$event.key)){ return null; }_vm.search(true)},"input":function($event){if($event.target.composing){ return; }_vm.content=$event.target.value}}}),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.time),expression:"time"}],staticClass:"form-control",attrs:{"title":"time"},domProps:{"value":(_vm.time)},on:{"keyup":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,"enter",13,$event.key)){ return null; }_vm.search(true)},"input":function($event){if($event.target.composing){ return; }_vm.time=$event.target.value}}}),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.hostname),expression:"hostname"}],staticClass:"form-control",attrs:{"titme":"hostname"},domProps:{"value":(_vm.hostname)},on:{"keyup":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,"enter",13,$event.key)){ return null; }_vm.search(true)},"input":function($event){if($event.target.composing){ return; }_vm.hostname=$event.target.value}}}),_vm._v(" "),_c('button',{staticClass:"btn btn-primary btn-lg primary-button",attrs:{"disabled":!_vm.content},on:{"click":function($event){_vm.search(true)}}},[_vm._v("search")])]),_vm._v(" "),_c('div',[_c('button',{staticClass:"btn btn-default btn-sm",attrs:{"disabled":_vm.logsSearchResult.length === 0},on:{"click":function($event){_vm.clearLogsSearchResult()}}},[_vm._v("clear")]),_vm._v(" "),_c('label',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.showRawLogResult),expression:"showRawLogResult"}],attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.showRawLogResult)?_vm._i(_vm.showRawLogResult,null)>-1:(_vm.showRawLogResult)},on:{"change":function($event){var $$a=_vm.showRawLogResult,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.showRawLogResult=$$a.concat([$$v]))}else{$$i>-1&&(_vm.showRawLogResult=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.showRawLogResult=$$c}}}}),_vm._v(" show raw data\n        ")]),_vm._v(" "),_c('label',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.showFormattedLogResult),expression:"showFormattedLogResult"}],attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.showFormattedLogResult)?_vm._i(_vm.showFormattedLogResult,null)>-1:(_vm.showFormattedLogResult)},on:{"change":function($event){var $$a=_vm.showFormattedLogResult,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.showFormattedLogResult=$$a.concat([$$v]))}else{$$i>-1&&(_vm.showFormattedLogResult=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.showFormattedLogResult=$$c}}}}),_vm._v(" show formatted data\n        ")])]),_vm._v(" "),_c('ul',[(_vm.logsSearchResult.length === 0)?_c('li',{staticClass:"li-result-item"},[_c('pre',{staticClass:"pre"},[_vm._v("not started or nothing found.")])]):_vm._e(),_vm._v(" "),_vm._l((_vm.logsSearchResult),function(log,index){return _c('li',{key:index,staticClass:"hide-button-container li-result-item"},[_c('span',{staticClass:"label label-primary"},[_c('relative-time',{attrs:{"time":log.timeValue,"locale":_vm.locale}})],1),_vm._v(" "),_c('span',{staticClass:"label label-default"},[_vm._v(_vm._s(log.hostname))]),_vm._v(" "),_c('span',{staticClass:"label label-default"},[_vm._v(_vm._s(log.filepath))]),_vm._v(" "),(log.content && _vm.showRawLogResult)?_c('pre',{staticClass:"pre",domProps:{"innerHTML":_vm._s(log.content)}}):_vm._e(),_vm._v(" "),(log.formattedContent && _vm.showFormattedLogResult && log.visible)?_c('pre',{staticClass:"pre",attrs:{"id":_vm.logSearchResultId(index)},domProps:{"innerHTML":_vm._s(log.formattedContent)}}):_vm._e(),_vm._v(" "),(log.formattedContent && _vm.showFormattedLogResult)?_c('button',{staticClass:"btn btn-default btn-sm",style:(_vm.visibilityButtonStyle(log)),on:{"click":function($event){_vm.toggleVisibility(log)}}},[_vm._v(_vm._s(log.visible ? "hide formatted" : "show formatted"))]):_vm._e()])})],2),_vm._v(" "),(_vm.logsSearchResult.length > 0 && _vm.leftCount > 0)?_c('div',[_c('button',{staticClass:"btn btn-primary",on:{"click":function($event){_vm.search(false)}}},[_vm._v("\n            continue\n            "),_c('span',{staticClass:"badge"},[_vm._v(_vm._s(_vm.leftCount))])])]):_vm._e()])}
// @ts-ignore
export var searchLogsTemplateHtmlStatic = [  ]
// @ts-ignore
export function searchSamplesTemplateHtml(this: SearchSamples) {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel"},[_c('div',{staticClass:"flex-center"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.searchFrom),expression:"searchFrom"}],staticClass:"form-control",staticStyle:{"width":"30%"},domProps:{"value":(_vm.searchFrom)},on:{"input":function($event){if($event.target.composing){ return; }_vm.searchFrom=$event.target.value}}}),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.searchTo),expression:"searchTo"}],staticClass:"form-control",staticStyle:{"width":"30%"},domProps:{"value":(_vm.searchTo)},on:{"input":function($event){if($event.target.composing){ return; }_vm.searchTo=$event.target.value}}}),_vm._v(" "),_c('button',{staticClass:"btn btn-primary btn-lg primary-button",attrs:{"disabled":!_vm.searchFrom || !_vm.searchTo},on:{"click":function($event){_vm.searchSamples()}}},[_vm._v("search")])]),_vm._v(" "),_c('ul',{staticClass:"menu list-unstyled"},_vm._l((_vm.chartConfigs),function(config,index){return _c('li',{key:config.name},[_c('a',{attrs:{"href":'#' + config.name}},[_vm._v(_vm._s(config.description))])])})),_vm._v(" "),_vm._l((_vm.chartConfigs),function(config,index){return _c('div',{key:config.name},[_c('h4',{staticStyle:{"padding-top":"10px"},attrs:{"id":config.name}},[_vm._v("\n            "+_vm._s(config.description)+"\n            "+_vm._s(config.unit !== undefined ? ("(" + config.unit + ")") : "")+"\n        ")]),_vm._v(" "),_c('canvas',{staticClass:"graph",attrs:{"id":'history-' + config.name,"width":_vm.chartWidth,"height":"300"}})])})],2)}
// @ts-ignore
export var searchSamplesTemplateHtmlStatic = [  ]
// tslint:enable
